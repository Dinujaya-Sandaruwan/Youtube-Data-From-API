{"version":3,"sources":["script.js","_global.js"],"names":["animator","document","getElementById","deiatls","hideLoader","style","display","setTimeout","clickButton","setInterval","showVideoInfo","initClient","gapi","client","init","apiKey","discoveryDocs","async","inputUrl","value","regex","videoId","match","video","youtube","videos","list","part","id","result","items","thumbnailUrl","snippet","thumbnails","maxres","url","img","createElement","src","thumbnailContainer","innerHTML","appendChild","videoTitle","title","likeCount","statistics","viewCount","description","channelName","channelTitle","innerText","comments","commentThreads","order","maxResults","commentsContainer","forEach","comment","username","topLevelComment","authorDisplayName","commentText","textDisplay","commentElement","error","console","load","app","global","log","loadHeader"],"mappings":"AACA,IAAAA,SAAAC,SAAAC,eAAA,UACAC,QAAAF,SAAAC,eAAA,WAEA,SAAAE,aACAD,QAAAE,MAAAC,QAAA,OACAC,YAAA,WACAP,SAAAK,MAAAC,QAAA,SACA,MAGA,SAAAE,cAEAP,SAAAC,eAAA,SAAAG,MAAAC,QAAA,OACAL,SAAAC,eAAA,MAAAG,MAAAC,QAAA,OAEAN,SAAAK,MAAAC,QAAA,QACAF,aAEAK,YAAAC,cAAA,MAQA,SAAAC,aACAC,KAAAC,OAAAC,KAAA,CACAC,OAAA,0CACAC,cAAA,CAAA,kEAIAC,eAAAP,gBAEAT,SAAAC,eAAA,SAAAG,MAAAC,QAAA,OAEA,IAEA,MAAAY,EAAAjB,SAAAC,eAAA,eAAAiB,MAGAC,EAAA,0EAIAC,EADAH,EAAAI,MAAAF,GACA,GASAG,SANAX,KAAAC,OAAAW,QAAAC,OAAAC,KAAA,CACAC,KAAA,qBACAC,GAAAP,KAIAQ,OAAAC,MAAA,GAGAC,EAAAR,EAAAS,QAAAC,WAAAC,OAAAC,IAGAC,EAAAnC,SAAAoC,cAAA,OACAD,EAAAE,IAAAP,EAGA,MAAAQ,EAAAtC,SAAAC,eAAA,uBACAqC,EAAAC,UAAA,GACAD,EAAAE,YAAAL,GAGA,MAAAM,EAAAnB,EAAAS,QAAAW,MACAC,EAAArB,EAAAsB,WAAAD,UACAE,EAAAvB,EAAAsB,WAAAC,UACAC,EAAAxB,EAAAS,QAAAe,YACAC,EAAAzB,EAAAS,QAAAiB,aAEAhD,SAAAC,eAAA,eACAgD,UAAAR,EAEAzC,SAAAC,eAAA,cACAgD,UAAA,GAAAN,IAEA3C,SAAAC,eAAA,eACAgD,UAAA,GAAAJ,IAEA7C,SAAAC,eAAA,eACAgD,UAAAH,EAEA9C,SAAAC,eAAA,gBACAgD,UAAA,GAAAF,IAGA,MAQAG,SARAvC,KAAAC,OAAAW,QAAA4B,eAAA1B,KAAA,CACAC,KAAA,UACAN,QAAAA,EACAgC,MAAA,OACAC,WAAA,MAIAzB,OAAAC,MAGAyB,EAAAtD,SAAAC,eAAA,YACAqD,EAAAf,UAAA,GAEAW,EAAAK,SAAAC,IACA,MAAAC,EAAAD,EAAAzB,QAAA2B,gBAAA3B,QAAA4B,kBACAC,EAAAJ,EAAAzB,QAAA2B,gBAAA3B,QAAA8B,YAEAC,EAAA9D,SAAAoC,cAAA,OACA0B,EAAAnC,GAAA,cACAmC,EAAAvB,UAAA,gBAAAkB,wBAAAG,YAEAN,EAAAd,YAAAsB,MAIA/D,SAAAK,MAAAC,QAAA,OACAH,QAAAE,MAAAC,QAAA,QAEAL,SAAAC,eAAA,MAAAG,MAAAC,QAAA,QAEA,MAAA0D,GACAC,QAAAD,MAAAA,GACA/D,SAAAC,eAAA,SAAAG,MAAAC,QAAA,SAtGAM,KAAAsD,KAAA,SAAAvD,YCvBAwD,IAAAC,OAAA,CACAtD,KAAA,WACAmD,QAAAI,IAAA,yBACAF,IAAAC,OAAAE,cAEAA,WAAA,WACAL,QAAAI,IAAA,kBAKAF,IAAAC,OAAAtD","file":"all.js","sourcesContent":["//Loading Animation\r\nlet animator = document.getElementById(\"loader\");\r\nlet deiatls = document.getElementById(\"deiatls\");\r\n\r\nfunction hideLoader() {\r\n  deiatls.style.display = \"none\";\r\n  setTimeout(function() {\r\n    animator.style.display = \"none\";\r\n  }, 9997);\r\n};\r\n\r\nfunction clickButton(){\r\n\r\n  document.getElementById('wrong').style.display = \"none\";\r\n  document.getElementById('me').style.display = \"none\";\r\n\r\n  animator.style.display = \"block\";\r\n  hideLoader()\r\n\r\n  setInterval(showVideoInfo, 9997);\r\n}\r\n\r\n\r\n// Load the YouTube API client library\r\ngapi.load(\"client\", initClient);\r\n\r\n// Initialize the API client library\r\nfunction initClient() {\r\n  gapi.client.init({\r\n    apiKey: \"AIzaSyAT2xb_UwBEYKNF6OS1qTQ7kqFYgvY2oW0\",\r\n    discoveryDocs: [\"https://www.googleapis.com/discovery/v1/apis/youtube/v3/rest\"]\r\n  });\r\n}\r\n\r\nasync function showVideoInfo() {\r\n\r\n  document.getElementById('wrong').style.display = \"none\";\r\n\r\n  try {\r\n    // Get the input URL from the user\r\n    const inputUrl = document.getElementById(\"youtube-url\").value;\r\n\r\n    // Define a regular expression to extract the video ID from the URL\r\n    const regex = /(?:https?:\\/\\/)?(?:www\\.)?youtu(?:be\\.com\\/watch\\?v=|\\.be\\/)([\\w\\-\\_]+)/;\r\n\r\n    // Use the regular expression to extract the video ID\r\n    const match = inputUrl.match(regex);\r\n    const videoId = match[1];\r\n\r\n    // Call the YouTube Data API to get information about the video\r\n    const videoResponse = await gapi.client.youtube.videos.list({\r\n      part: \"snippet,statistics\",\r\n      id: videoId\r\n    });\r\n\r\n    // Get the video information from the API response\r\n    const video = videoResponse.result.items[0];\r\n\r\n    // Get the URL of the video thumbnail from the API response\r\n    const thumbnailUrl = video.snippet.thumbnails.maxres.url;\r\n\r\n    // Set the `src` attribute of an `img` tag to display the thumbnail\r\n    const img = document.createElement(\"img\");\r\n    img.src = thumbnailUrl;\r\n\r\n    // Add the thumbnail to the page\r\n    const thumbnailContainer = document.getElementById(\"thumbnail-container\");\r\n    thumbnailContainer.innerHTML = \"\";\r\n    thumbnailContainer.appendChild(img);\r\n\r\n    // Get the video information and display it on the page\r\n    const videoTitle = video.snippet.title;\r\n    const likeCount = video.statistics.likeCount;\r\n    const viewCount = video.statistics.viewCount;\r\n    const description = video.snippet.description;\r\n    const channelName = video.snippet.channelTitle;\r\n\r\n    const titleElement = document.getElementById(\"video-title\");\r\n    titleElement.innerText = videoTitle;\r\n\r\n    const likeCountElement = document.getElementById(\"like-count\");\r\n    likeCountElement.innerText = `${likeCount}`;\r\n\r\n    const viewCountElement = document.getElementById(\"views-count\");\r\n    viewCountElement.innerText = `${viewCount}`;\r\n\r\n    const descriptionElement = document.getElementById(\"description\");\r\n    descriptionElement.innerText = description;\r\n\r\n    const channelNameElement = document.getElementById(\"channel-name\");\r\n    channelNameElement.innerText = `${channelName}`;\r\n\r\n    // Call the YouTube Data API to get the video's comments\r\n    const commentResponse = await gapi.client.youtube.commentThreads.list({\r\n      part: \"snippet\",\r\n      videoId: videoId,\r\n      order: \"time\",\r\n      maxResults: 10\r\n    });\r\n\r\n    // Get the comments from the API response\r\n    const comments = commentResponse.result.items;\r\n\r\n    // Display the comments on the page\r\n    const commentsContainer = document.getElementById(\"comments\");\r\n    commentsContainer.innerHTML = \"\";\r\n\r\n    comments.forEach(comment => {\r\n      const username = comment.snippet.topLevelComment.snippet.authorDisplayName;\r\n      const commentText = comment.snippet.topLevelComment.snippet.textDisplay;\r\n\r\n      const commentElement = document.createElement(\"div\");\r\n      commentElement.id = \"one-comment\";\r\n      commentElement.innerHTML = `<p id=\"user\">${username}</p><p id=\"comment\">${commentText}</p><hr>`;\r\n\r\n      commentsContainer.appendChild(commentElement);\r\n    });\r\n\r\n    // Display loading animation\r\n    animator.style.display = \"none\";\r\n    deiatls.style.display = \"block\";\r\n\r\n    document.getElementById('me').style.display = \"block\";\r\n\r\n  } catch (error) {\r\n    console.error(error);\r\n    document.getElementById('wrong').style.display = \"block\";\r\n  }\r\n}","// Global\r\napp.global = {\r\n    init: function(){ // Load all global functions here\r\n        console.log(\"load global functions\");\r\n        app.global.loadHeader();\r\n    },\r\n    loadHeader: function(){ // Some specific function\r\n        console.log(\"loadHeader()\");\r\n    }\r\n}\r\n\r\n// Run the global stuff\r\napp.global.init();"]}